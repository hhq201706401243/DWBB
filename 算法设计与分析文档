算法问题：【多维背包问题】
第一行，手动输入n个物品，m个属性，如6个物品，10个属性，第三个是每份数据的最优值，不需要输入，是要求的结果。
第二行，每个物品的价值
接下来的每一行是每个物品的第一个属性，第二个属性等等，最后一行是每个属性的最大值，如8、12、13、64、22、41所挑取的数值不能超过80；8、12、13、75、22、41不能超过96。
6 10 3800
 100 600 1200 2400 500 2000
 8 12 13 64 22 41
 8 12 13 75 22 41
 3 6 4 18 6 4
 5 10 8 32 6 12
 5 13 8 42 6 20
 5 13 8 48 6 20
 0 0 0 0 8 0
 3 0 4 0 8 0
 3 2 4 0 8 4
 3 2 4 8 8 4
 80 96 20 36 44 48 10 18 22 24
算法设计：使用c语言程序设计语言编写源程序。首先声明头文件和常量，定义物品总量n和背包容量c（挑选每一行的属性数值不能超过规定值，这个规定值即可看作是
背包的总容量）定义数组m[i][j]并使用非递归算法来求解m[i][j],然后编写一个函数用来寻找问题的最优解，再编写一个函数用于输入问题的最优解，最后在主函数
中定义各个物品的价值和重量，最终计算最优解并输出。

算法分析：使用这个算法来计算多维背包问题的算法复杂度极高，因为它要一行一行属性进行运行求解，不能一次性直接求解，问题中说明有10个属性，则该算法要运行
10次才能求出这个数据集中问题的最优解，操作过程复杂且相对比较麻烦。
